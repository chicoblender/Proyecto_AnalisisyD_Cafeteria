USE cafeteria_2023;

DROP TABLE Almacen;

CREATE TABLE Almacen
(
id_almacen INT IDENTITY PRIMARY KEY NOT NULL,
stock_prod  INT NOT NULL, --int -- stock del producto
id_prod INT,
FOREIGN KEY (id_prod) REFERENCES Producto(id_prod),
);
INSERT INTO Almacen(id_prod,stock_prod) VALUES
(1,10);
----------------------------------------------------------------
DROP TABLE Categoria;

CREATE TABLE Categoria
(
id_cate  INT IDENTITY PRIMARY KEY NOT NULL,      --String --id 
nombre_cate VARCHAR(50) NOT NULL,--String --Nombre de la categoria 
id_almacen INT,
id_prod INT,
FOREIGN KEY (id_almacen) REFERENCES Almacen(id_almacen), -- stock del producto -- tabla almacen
FOREIGN KEY (id_prod) REFERENCES Producto(id_prod),
);
INSERT INTO Categoria (nombre_cate)VALUES
('Bebida');
----------------------------------------------------------------
CREATE TABLE Producto
(
id_prod   INT IDENTITY PRIMARY KEY NOT NULL, --Int     --id
cod_prod VARCHAR(20)  NOT NULL, --String --codigo
nom_prod VARCHAR(50) NOT NULL, --String --NOMBRE
prec_prod INT NOT NULL, --Int --precio
img_prod  VARBINARY(MAX),--String "VARBINARY(MAX)"--imagen del producto
);
INSERT INTO Producto(cod_prod,nom_prod,prec_prod,img_prod)VALUES
('A01','Sprite',10,'');
----------------------------------------------------------------
----------------------------------------------------------------     
CREATE TABLE Cliente
(
ci_cliente   VARCHAR(20) PRIMARY KEY NOT NULL, --String --ci del cliente
);
----------------------------------------------------------------
CREATE TABLE Mesa
(
id_mesa INT PRIMARY KEY NOT NULL, --numero de la mesa
mesa_disp INT NOT NULL,         -- valor a disponibilidad de mesa
);
----------------------------------------------------------------
CREATE TABLE Pedido
(
id_pedido   INT IDENTITY PRIMARY KEY NOT NULL, --int -- id del pedido
list_prod   VARCHAR(1000) NOT NULL, --String -- lista de producto pedido o descripcion
sum_prec    INT NOT NULL,  --int -- precio total de los productos consumidos
ped_servido INT NOT NULL, -- valor que determina si el pedido esta servido o no
cod_prod   VARCHAR(20),
id_mesa    INT,
ci_cliente  VARCHAR(20),
FOREIGN KEY (cod_prod) REFERENCES Producto (cod_prod), -- cod de producto
FOREIGN KEY (id_mesa) REFERENCES Mesa (id_mesa),-- numero de mesa
FOREIGN KEY (ci_cliente) REFERENCES Cliente(ci_cliente), -- ci del cliente
);
----------------------------------------------------------------
CREATE TABLE Pago
(
id_pago INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
id_pedido INT,

FOREIGN KEY (id_pedido) REFERENCES Pedido (id_pedido),--tabla pedido
);
-----------------------------------------------------------------
-----------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
DROP PROCEDURE spu_registrar_producto
DROP TABLE Producto
DROP TABLE Pedido
DROP TABLE Pago
----------------registrar productos-----------------------
CREATE PROCEDURE spu_registrar_producto  
@cod_prod VARCHAR(20),
@nom_prod VARCHAR(50),
@prec_prod INT,
@img_prod VARBINARY(MAX),
@mensaje VARCHAR(50) OUTPUT
AS
BEGIN  
  IF(exists(SELECT * FROM Producto WHERE cod_prod=@cod_prod))
    SET @mensaje = 'No se puede agregar un producto ya existente' --el cod del producto ya existe	  
  ELSE
  BEGIN
    INSERT INTO Producto VALUES(@cod_prod,@nom_prod,@prec_prod,@img_prod)  
    SET @mensaje = 'Producto Registrado' --registrado correctamente el producto	  
  END  
END  
GO
SELECT*FROM Producto;
 DELETE Producto;
 -------------------------------------------------------------------
 ------------------------Modificar productos---------------------------------------
 DROP PROCEDURE spu_modificar_producto
 CREATE PROCEDURE spu_modificar_producto 
@id_prod INT, 
@cod_prod VARCHAR(20),
@nom_prod VARCHAR(50),
@prec_prod INT,
@img_prod VARBINARY(MAX),
@mensaje VARCHAR(50) OUTPUT
AS
BEGIN  
  IF (exists(SELECT * FROM Producto WHERE id_prod=@id_prod))
  BEGIN          
    
    UPDATE Producto SET cod_prod=@cod_prod,nom_prod=@nom_prod,prec_prod=@prec_prod,img_prod=@img_prod
    WHERE id_prod=@id_prod  
    SET @mensaje = '1' --modificado
  END
  ELSE    
  BEGIN        
    SET @mensaje = '0' --no modificado
  END
END  
GO
-------------------------------------------------------
----------------------mostrar tabla--------------------
CREATE PROCEDURE spu_listado_productos

AS
	SELECT * FROM Producto
GO